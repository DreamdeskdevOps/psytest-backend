// src/controllers/tests/index.js

const Test = require('../../models/Test');

// Create a new test
exports.createTest = async (req, res) => {
    try {
        const testData = req.body;
        const newTest = await Test.create(testData);
        res.status(201).json({ success: true, data: newTest });
    } catch (error) {
        res.status(500).json({ success: false, message: error.message });
    }
};

// Get all tests
exports.getAllTests = async (req, res) => {
    try {
        const tests = await Test.findAll();
        res.status(200).json({ success: true, data: tests });
    } catch (error) {
        res.status(500).json({ success: false, message: error.message });
    }
};

// Get a test by ID
exports.getTestById = async (req, res) => {
    try {
        const test = await Test.findByPk(req.params.id);
        if (!test) {
            return res.status(404).json({ success: false, message: 'Test not found' });
        }
        res.status(200).json({ success: true, data: test });
    } catch (error) {
        res.status(500).json({ success: false, message: error.message });
    }
};

// Update a test by ID
exports.updateTest = async (req, res) => {
    try {
        const test = await Test.findByPk(req.params.id);
        if (!test) {
            return res.status(404).json({ success: false, message: 'Test not found' });
        }
        const updatedTest = await test.update(req.body);
        res.status(200).json({ success: true, data: updatedTest });
    } catch (error) {
        res.status(500).json({ success: false, message: error.message });
    }
};

// Delete a test by ID
exports.deleteTest = async (req, res) => {
    try {
        const test = await Test.findByPk(req.params.id);
        if (!test) {
            return res.status(404).json({ success: false, message: 'Test not found' });
        }
        await test.destroy();
        res.status(204).json({ success: true, message: 'Test deleted successfully' });
    } catch (error) {
        res.status(500).json({ success: false, message: error.message });
    }
};